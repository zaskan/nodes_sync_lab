---
- name: Change Cluster nodes
  gather_facts: true
  hosts: localhost
  vars:
    # Ensure job_uuid is defined
    job_uuid: "{{ job_uuid }}"
  tasks:
    - name: Extract JOB_ID value using job_uuid prefix
      ansible.builtin.set_fact:
        job_id: "{{ hostvars.localhost[job_uuid + '_sync_job_id'] | regex_search('JOB_ID=([0-9]+)', '\\1') }}"

    - name: Extract Sync Job Environment Controller node
      ansible.builtin.set_fact:
        sync_data: "{{ lookup('ansible.controller.controller_api', 'jobs/{{ job_id[0] }}/') }}"

    - name: Extract controller node with job_uuid prefix
      ansible.builtin.set_fact:
        "{{ job_uuid }}_controller_node": "{{ sync_data.controller_node }}"

    - name: Extract execution node with job_uuid prefix
      ansible.builtin.set_fact:
        "{{ job_uuid }}_execution_node": "{{ sync_data.execution_node }}"

    - name: Get controller nodes
      ansible.builtin.uri:
        url: "{{ lookup('ansible.builtin.env', 'CONTROLLER_HOST') }}/api/v2/instances/?node_type=control"
        user: "{{ lookup('ansible.builtin.env', 'CONTROLLER_USERNAME') }}"
        password: "{{ lookup('ansible.builtin.env', 'CONTROLLER_PASSWORD') }}"
        method: GET
        force_basic_auth: true
        status_code: 200
        body_format: json
        validate_certs: false
      register: controller_nodes

    - name: Get execution nodes
      ansible.builtin.uri:
        url: "{{ lookup('ansible.builtin.env', 'CONTROLLER_HOST') }}/api/v2/instances/?node_type=execution"
        user: "{{ lookup('ansible.builtin.env', 'CONTROLLER_USERNAME') }}"
        password: "{{ lookup('ansible.builtin.env', 'CONTROLLER_PASSWORD') }}"
        method: GET
        force_basic_auth: true
        status_code: 200
        body_format: json
        validate_certs: false
      register: execution_nodes

    - name: Enable control nodes
      ansible.controller.instance:
        hostname: "{{ item.hostname }}"
        enabled: true
        validate_certs: false
      loop: "{{ controller_nodes.json.results }}"

    - name: Enable execution nodes
      ansible.controller.instance:
        hostname: "{{ item.hostname }}"
        enabled: true
        validate_certs: false
      loop: "{{ execution_nodes.json.results }}"

    - name: Disable Instances with job_uuid prefix
      ansible.controller.instance:
        hostname: "{{ item }}"
        enabled: false
        validate_certs: false
      loop:
        - "{{ hostvars.localhost['{{ job_uuid }}_controller_node'] }}"
        - "{{ hostvars.localhost['{{ job_uuid }}_execution_node'] }}"
